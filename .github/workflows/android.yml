name: Build AAB (Agenda de Bienestar)
on: { workflow_dispatch: {} }

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (repo vacío está bien)
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # ====== CREA EL PROYECTO Y ARCHIVOS ======
      - name: Create Flutter project & app files
        run: |
          flutter create .
          cat > pubspec.yaml << 'PUB'
name: agenda_bienestar
description: Agenda de Bienestar & Productividad
publish_to: "none"
version: 1.0.1+2

environment:
  sdk: ">=3.1.0 <4.0.0"

dependencies:
  flutter:
    sdk: flutter
  google_mobile_ads: ^5.1.0
  shared_preferences: ^2.3.2
  url_launcher: ^6.3.0

flutter:
  uses-material-design: true
PUB

          mkdir -p lib
          cat > lib/main.dart << 'DART'
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:google_mobile_ads/google_mobile_ads.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:url_launcher/url_launcher.dart';

const kAdmobAppId = "ca-app-pub-3271573238193487~1404730671";
const kAdmobBannerId = "ca-app-pub-3271573238193487/9120952051";
const kAdmobInterstitialId = "ca-app-pub-3271573238193487/4346874199";

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await MobileAds.instance.initialize();
  runApp(const App());
}

class App extends StatelessWidget {
  const App({super.key});
  @override
  Widget build(BuildContext c) => MaterialApp(
    title: 'Agenda de Bienestar',
    theme: ThemeData(useMaterial3: true),
    home: const Home(),
  );
}

class Home extends StatefulWidget {
  const Home({super.key});
  @override State<Home> createState() => _S();
}
class _S extends State<Home> {
  final c = TextEditingController();
  List<Map<String,dynamic>> t = [];
  int done = 0;
  InterstitialAd? inter;

  @override void initState() { super.initState(); _load(); _loadInter(); }

  Future<void> _load() async {
    final sp = await SharedPreferences.getInstance();
    final raw = sp.getString('t') ?? '[]';
    t = (json.decode(raw) as List).cast<Map<String,dynamic>>();
    done = t.where((e)=>e['d']==true).length;
    setState((){});
  }
  Future<void> _save() async {
    final sp = await SharedPreferences.getInstance();
    await sp.setString('t', json.encode(t));
  }

  void _loadInter(){
    InterstitialAd.load(
      adUnitId: kAdmobInterstitialId,
      request: const AdRequest(),
      adLoadCallback: InterstitialAdLoadCallback(
        onAdLoaded: (a)=> inter = a,
        onAdFailedToLoad: (_)=> inter = null,
      ),
    );
  }
  void _maybeInter(){
    if(inter!=null && done>0 && done%3==0){ inter!.show(); inter=null; _loadInter(); }
  }

  Future<void> _ext() async {
    final ok = await showDialog<bool>(
      context: context,
      builder:(_)=> AlertDialog(
        title: const Text('Abrir enlace externo'),
        content: const Text('Vas a salir de la app (Linktree). ¿Continuar?'),
        actions: [
          TextButton(onPressed: ()=>Navigator.pop(context,false), child: const Text('Cancelar')),
          ElevatedButton(onPressed: ()=>Navigator.pop(context,true), child: const Text('Sí')),
        ],
      ),
    ) ?? false;
    if(ok){
      final u = Uri.parse('https://linktr.ee/erjovelazo');
      if(await canLaunchUrl(u)) { await launchUrl(u, mode: LaunchMode.externalApplication); }
    }
  }

  @override
  Widget build(BuildContext ctx) => Scaffold(
    appBar: AppBar(
      title: const Text('Agenda de Bienestar & Productividad'),
      actions: [ IconButton(onPressed: _ext, icon: const Icon(Icons.link)) ],
    ),
    bottomNavigationBar: const _B(),
    body: Padding(
      padding: const EdgeInsets.all(16),
      child: Column(children: [
        Row(children:[
          Expanded(child: TextField(controller:c, decoration: const InputDecoration(hintText:'Añade un hábito o tarea'))),
          const SizedBox(width:8),
          ElevatedButton(
            onPressed: (){
              if(c.text.trim().isEmpty) return;
              t.add({'tx': c.text.trim(), 'd': false});
              c.clear(); _save(); setState((){});
            },
            child: const Text('Agregar'),
          )
        ]),
        const SizedBox(height:12),
        Expanded(child: ListView.separated(
          itemCount: t.length,
          separatorBuilder: (_, __)=> const Divider(),
          itemBuilder: (_, i){
            final e = t[i];
            return ListTile(
              leading: Checkbox(
                value: e['d'] == true,
                onChanged: (v){
                  e['d'] = v==true; done = t.where((x)=>x['d']==true).length; _maybeInter(); _save(); setState((){});
                },
              ),
              title: Text(e['tx']),
              trailing: IconButton(icon: const Icon(Icons.delete_forever), onPressed: (){
                t.removeAt(i); done = t.where((x)=>x['d']==true).length; _save(); setState((){});
              }),
            );
          },
        )),
      ]),
    ),
  );
}

class _B extends StatefulWidget { const _B({super.key}); @override State<_B> createState()=> _BS(); }
class _BS extends State<_B>{
  BannerAd? ad;
  @override void initState(){
    super.initState();
    ad = BannerAd(size: AdSize.banner, adUnitId: kAdmobBannerId, request: const AdRequest(), listener: BannerAdListener(onAdFailedToLoad:(a,e)=>a.dispose()))..load();
  }
  @override void dispose(){ ad?.dispose(); super.dispose(); }
  @override Widget build(c)=> ad==null ? const SizedBox.shrink() : SizedBox(height: ad!.size.height.toDouble(), width: ad!.size.width.toDouble(), child: AdWidget(ad: ad!));
}
DART

          # Cambiar paquete y meter APP_ID en el manifest
          sed -i 's/package="com.example.agenda_bienestar"/package="com.erjovelazo.agenda"/' android/app/src/main/AndroidManifest.xml
          awk '1;/<application/{print "        <meta-data android:name=\"com.google.android.gms.ads.APPLICATION_ID\" android:value=\"ca-app-pub-3271573238193487~1404730671\" />"}' android/app/src/main/AndroidManifest.xml > tmp && mv tmp android/app/src/main/AndroidManifest.xml

      - name: Create signing keystore
        run: |
          mkdir -p android/app
          STORE_PW="Abc12345"; KEY_PW="Abc12345"; ALIAS="upload"
          keytool -genkey -v -keystore android/app/upload-keystore.jks -storepass "$STORE_PW" -keypass "$KEY_PW" -keyalg RSA -keysize 2048 -validity 10000 -alias "$ALIAS" -dname "CN=Agenda,O=EB,L=Santiago,C=CL"
          cat > android/key.properties << EOF
storePassword=$STORE_PW
keyPassword=$KEY_PW
keyAlias=$ALIAS
storeFile=app/upload-keystore.jks
EOF

      - name: Patch android/app/build.gradle
        run: |
          cat > android/app/build.gradle << 'GRADLE'
def p=new Properties(); def f=rootProject.file('local.properties'); if(f.exists()) f.withReader('UTF-8'){ r-> p.load(r) }
def flutterRoot=p.getProperty('flutter.sdk'); assert flutterRoot!=null: "Flutter SDK not found."
apply plugin:'com.android.application'
apply plugin:'kotlin-android'
apply from:"$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
android{
  namespace "com.erjovelazo.agenda"
  compileSdkVersion flutter.compileSdkVersion
  ndkVersion flutter.ndkVersion
  defaultConfig{
    applicationId "com.erjovelazo.agenda"
    minSdkVersion flutter.minSdkVersion
    targetSdkVersion flutter.targetSdkVersion
    versionCode 2
    versionName "1.0.1"
  }
  signingConfigs{
    release{
      def kp=new Properties(); def kpf=rootProject.file('android/key.properties'); if(kpf.exists()) kp.load(new FileInputStream(kpf));
      storeFile file(kp['storeFile'])
      storePassword kp['storePassword']
      keyAlias kp['keyAlias']
      keyPassword kp['keyPassword']
    }
  }
  buildTypes{ release{ signingConfig signingConfigs.release; minifyEnabled false; shrinkResources false } }
}
dependencies{ implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.24" }
GRADLE

      - name: Flutter pub get
        run: flutter pub get

      - name: Build AAB (release)
        run: flutter build appbundle --release

      - name: (Opcional) Build APK (release)
        run: flutter build apk --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AgendaBienestar-AAB
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: AgendaBienestar-APK
          path: build/app/outputs/flutter-apk/app-release.apk
          
