name: Build Flutter/Android (sin ZIP)

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      # ðŸ‘‡ Nombre interno vÃ¡lido para Flutter (minÃºsculas + guiones bajos)
      PROJECT_NAME: agenda_para_bienestar
      # ðŸ‘‡ Paquete Android (visible en Ajustes del sistema)
      ANDROID_APP_ID: com.agenda.bienestar
      # ðŸ‘‡ Nombre visible bajo el Ã­cono y en la barra del sistema
      APP_LABEL: Agenda para Bienestar
      # ðŸ‘‡ VersiÃ³n de Flutter estable
      FLUTTER_VERSION: "3.22.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      # 1) Crear un proyecto Flutter mÃ­nimo con nombre interno vÃ¡lido
      - name: Create Flutter project
        run: |
          flutter --version
          rm -rf app_src
          flutter create \
            --project-name $PROJECT_NAME \
            --org $ANDROID_APP_ID \
            app_src

      # 2) Aplicar AndroidManifest con el nombre visible correcto
      - name: Apply AndroidManifest (label + permisos)
        run: |
          MANIFEST="app_src/android/app/src/main/AndroidManifest.xml"
          cat > "$MANIFEST" << 'XML'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="${ANDROID_APP_ID}">
              <uses-permission android:name="android.permission.INTERNET"/>
              <application
                  android:name="${applicationName}"
                  android:label="${APP_LABEL}"
                  android:icon="@mipmap/ic_launcher"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:allowBackup="true"
                  android:supportsRtl="true">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:launchMode="singleTop"
                      android:windowSoftInputMode="adjustResize">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN"/>
                          <category android:name="android.intent.category.LAUNCHER"/>
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          XML
        shell: bash
        env:
          ANDROID_APP_ID: ${{ env.ANDROID_APP_ID }}
          APP_LABEL: ${{ env.APP_LABEL }}

      # 3) Reemplazar main.dart por una pantalla de bienvenida
      - name: Apply main.dart (pantalla de inicio)
        run: |
          MAIN="app_src/lib/main.dart"
          cat > "$MAIN" << 'DART'
          import 'package:flutter/material.dart';
          void main() => runApp(const MyApp());

          class MyApp extends StatelessWidget {
            const MyApp({super.key});
            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                debugShowCheckedModeBanner: false,
                title: 'Agenda para Bienestar',
                theme: ThemeData(
                  colorScheme: ColorScheme.fromSeed(seedColor: Colors.teal),
                  useMaterial3: true,
                ),
                home: const HomePage(),
              );
            }
          }

          class HomePage extends StatelessWidget {
            const HomePage({super.key});
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(title: const Text('Agenda para Bienestar')),
                body: const Center(
                  child: Text(
                    'Â¡Listo! Base de la app creada.\nAquÃ­ agregaremos la lista y el FAB.',
                    textAlign: TextAlign.center,
                  ),
                ),
                floatingActionButton: FloatingActionButton.extended(
                  onPressed: () {},
                  label: const Text('AÃ±adir'),
                  icon: const Icon(Icons.add),
                ),
              );
            }
          }
          DART

      # 4) Asegurar nombre interno correcto en pubspec.yaml
      - name: Fix pubspec name
        run: |
          sed -i "s/^name: .*/name: ${PROJECT_NAME}/" app_src/pubspec.yaml

      # 5) Resolver dependencias
      - name: Flutter pub get
        working-directory: app_src
        run: flutter pub get

      # 6) Compilar APK (release)
      - name: Build Android APK (release)
        working-directory: app_src
        run: flutter build apk --release

      # 7) Subir el APK como artefacto
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: AgendaParaBienestar-APK
          path: app_src/build/app/outputs/flutter-apk/app-release.apk
