name: Build Flutter/Android (sin ZIP)

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.22.0'

      - name: Crear proyecto Flutter mínimo
        run: |
          set -e
          rm -rf app
          flutter create app
          cd app

          # Ajustar el AndroidManifest para Android 12+ (exported) y etiqueta
          MANIFEST=android/app/src/main/AndroidManifest.xml
          # añade android:exported="true" si no está
          if ! grep -q 'android:exported=' "$MANIFEST"; then
            sed -i '0,/<activity /s//<activity android:exported="true" /' "$MANIFEST"
          fi
          # Cambia el label (nombre visible)
          if grep -q 'android:label=' "$MANIFEST"; then
            sed -i 's/android:label="[^"]*"/android:label="Agenda para Bienestar"/' "$MANIFEST"
          else
            sed -i '0,/<application /s//<application android:label="Agenda para Bienestar" /' "$MANIFEST"
          fi

          # Pantalla inicial muy simple
          mkdir -p lib
          cat > lib/main.dart <<'DART'
          import 'package:flutter/material.dart';
          void main() => runApp(const MyApp());
          class MyApp extends StatelessWidget {
            const MyApp({super.key});
            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'Agenda de Bienestar',
                home: Scaffold(
                  appBar: AppBar(title: const Text('Agenda de Bienestar')),
                  body: const Center(child: Text('¡Hola! App mínima lista.')),
                ),
              );
            }
          }
          DART

      - name: Obtener dependencias
        run: |
          set -e
          cd app
          flutter pub get

      - name: Preparar Gradle Wrapper
        run: |
          set -e
          cd app/android
          ./gradlew --version || true

      - name: Build APK (release)
        run: |
          set -e
          cd app
          flutter build apk --release

      - name: Subir APK como artifact
        uses: actions/upload-artifact@v4
        with:
          name: AgendaBienestar-APK
          path: app/build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error
