name: Build & Release Android APK (Expo)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write   # necesario para crear el Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Use Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm install

      - name: Install Expo CLI
        run: npm i -g expo@^50

      # Verifica que los assets existan
      - name: Verify assets exist
        run: |
          for f in assets/icon.png assets/splash.png assets/adaptive-icon.png; do
            if [ ! -f "$f" ]; then
              echo "::error::Falta el archivo requerido: $f"; exit 1;
            fi
            file "$f" || true
          done

      # Genera /android con Expo
      - name: Expo prebuild (Android)
        env:
          CI: true
        run: npx expo prebuild --platform android --clean --no-install

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK (debug)
        run: |
          cd android
          ./gradlew assembleDebug

      # Guarda también como Artifact por si quieres
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Agenda-para-bienestar-debug
          path: android/app/build/outputs/apk/debug/*.apk

      # === PUBLICACIÓN EN RELEASE ===
      - name: Get APK path
        id: apk
        run: |
          echo "apk_path=$(ls android/app/build/outputs/apk/debug/*.apk | head -n 1)" >> $GITHUB_OUTPUT
          echo "tag=v${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          echo "release_name=Agenda-para-bienestar Debug #${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.apk.outputs.tag }}
          name: ${{ steps.apk.outputs.release_name }}
          draft: false
          prerelease: true
          files: |
            ${{ steps.apk.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
